---
- name: Ensure nginx docker image is downloaded
  community.docker.docker_image:
    name: "nginx:{{ nginx_version }}"
    source: pull
    state: present

- name: Stop nginx
  community.docker.docker_container:
    name: "{{ containers_nginx }}"
    state: absent

- name: Stop and remove takt-public container
  community.docker.docker_container:
    name: "{{ containers_takt_public }}"
    state: absent

- name: Ensure directories
  ansible.builtin.file:
    path: /var/lib/takt_host
    state: directory
    mode: '0755'

- name: Copy nginx config
  ansible.builtin.template:
    src: takt_nginx.conf.j2
    dest: /var/lib/takt_host/takt_nginx.conf
    mode: '0644'

- name: Start nginx
  community.docker.docker_container:
    name: "{{ containers_nginx }}"
    state: started
    image: "nginx:{{ nginx_version }}"
    restart_policy: "unless-stopped"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/lib/takt_host/takt_nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/lib/takt_host/letsencrypt/conf:/etc/letsencrypt
      - /var/lib/takt_host/letsencrypt/www:/var/www/certbot
    networks:
      - name: "{{ network_application }}"

- name: Certbot 
  community.docker.docker_container:
    name: certbon_container
    state: started
    image: certbot/certbot:v2.8.0
    volumes:
      - /var/lib/takt_host/takt_nginx.conf:/etc/nginx/conf.d/default.conf
      - /var/lib/takt_host/letsencrypt/conf:/etc/letsencrypt
      - /var/lib/takt_host/letsencrypt/www:/var/www/certbot
      - /var/lib/takt_host/letsencrypt/log:/var/log/letsencrypt/
    networks:
      - name: "{{ network_application }}"
